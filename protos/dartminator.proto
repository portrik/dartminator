syntax = "proto3";

import "google/protobuf/empty.proto";

// Dijkstra-Scholten:
// 1. The Initiator of the computation becomes the root of the tree
//     and sends out a computational message
// 2. Upon recieving computational message
//    a. Not in the computation: Node becomes child of sender, no acknowledgment is sent
//    b. In the computation: Acknowledgement is sent immediately
// 3. When node and all of its children become idle, acknowledgement is sent to parent
// 4. Termination occurs when the initiator has no children and is idle

// Nodes in the Dijkstra-Scholten algorithm are all equal thus having the same rpcs
// Both server and client code is implemented in the Node
service Node {
    rpc Initiate(ComputationArgument) returns (stream ComputationHeartbeat);
}

message ComputationArgument {
    string argument = 1;
}

message ComputationResult {
    bool done = 1;
    string result = 2;
}

message ComputationHeartbeat {
    oneof content {
        ComputationResult result = 1;
        google.protobuf.Empty empty = 2;
    }
}